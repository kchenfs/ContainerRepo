name: Update ECS Fargate

on:
  push:
    branches:
      - master # Trigger this workflow on pushes to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Authenticate with ECR
      run: |
        # Authenticate Docker with your AWS account
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

    - name: Build Docker Image
      run: |
        pwd
        ls -al
        # Build your Docker image here
        docker build -t my-website-image:latest .

    - name: Tag Docker Image
      run: |
        # Tag the Docker image with the ECR repository URL
        docker tag my-website-image:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/container-repo:latest

    - name: Push Docker Image to AWS ECR
      run: |
        # Push the Docker image to ECR
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/container-repo:latest

    - name: Update ECS/Fargate Service
      run: |
        aws ecs update-service --cluster kchenfs-cluster --service kchenfs-service --force-new-deployment

  deploy-lambda-function: # This block should be at the same level as build-and-deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Deploy Lambda Function
      run: |
        pwd
        ls -l
        echo "Zipping artifacts and pushing to S3..."
        mkdir lambda_function
        zip lambda_function/lambda_function.zip lambda_function.py
        aws s3 sync ./lambda_function s3://kencfswebsite/
        aws lambda update-function-code --function-name "WebsiteCounterLambda" --s3-bucket "kencfswebsite" --s3-key "lambda_function.zip"
